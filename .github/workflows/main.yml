name: build_deploy_aks
on:
  push:

jobs:
  build:
    runs-on: [self-hosted, linux]
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Log in to Azure Container Registry
        uses: docker/login-action@v1
        with:
          registry: penghian.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-

      - name: Build and push Docker image to ACR
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: penghian.azurecr.io/fastapi-test:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Azure CLI login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context using Azure CLI
        run: az aks get-credentials --resource-group penghian_rg --name penghian --overwrite-existing

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3

      - name: Install Helm
        uses: Azure/setup-helm@v4

      - name: Install helm diff plugin
        run: helm plugin install https://github.com/databus23/helm-diff

      - name: Deploy with Helmfile
        run: |
          cd helmchart
          helm install stakefish .

      - name: Test application
        run: |
          set -e # Stop the workflow if any command fails
          echo "Testing root path..."
          curl http://172.171.140.70:3000/
          
          echo "Testing lookup endpoint..."
          curl "http://172.171.140.70:3000/v1/tools/lookup?domain=example.com"
          
          echo "Testing history endpoint..."
          curl http://172.171.140.70:3000/v1/history
          
          echo "Testing validate endpoint with POST request..."
          curl -X 'POST' \
            'http://172.171.140.70:3000/v1/tools/validate' \
            -H 'accept: application/json' \
            -H 'Content-Type: application/json' \
            -d '{
              "ip": "192.168.1.1"
            }'
