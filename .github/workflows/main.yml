name: build_deploy_aks
on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code 
        uses: actions/checkout@v4

      - name: Log in to Azure Container Registry
        run: sudo docker login penghian.azurecr.io --username ${{ secrets.ACR_USERNAME }} --password ${{ secrets.ACR_PASSWORD }}

      - name: Build and push Docker image to ACR
        run: |
          sudo docker build -t fastapi-test:latest -f docker/Dockerfile ./docker
          sudo docker tag fastapi-test:latest penghian.azurecr.io/fastapi-test:latest
          sudo docker push penghian.azurecr.io/fastapi-test:latest

      - name: Azure login
        id: login
        uses: azure/login@v1.4.3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        id: set-context
        uses: azure/aks-set-context@v3
        with:
          resource-group: '${{ secrets.resource_group }}' 
          cluster-name: '${{ secrets.cluster_name }}'

      - name: Test kubectl configuration
        run: |
          kubectl cluster-info
          kubectl get nodes

      - name: Setup kubectl
        id: install-kubectl
        uses: azure/setup-kubectl@v3

      - name: Install helmfile
        run: |
          curl -L https://github.com/helmfile/helmfile/releases/download/v0.163.1/helmfile_0.163.1_linux_amd64.tar.gz -o helmfile.tar.gz
          tar -zxvf helmfile.tar.gz
          chmod +x helmfile
          mv helmfile /usr/local/bin/
          helmfile --version

      - name: Install helm diff plugin
        run: helm plugin install https://github.com/databus23/helm-diff

      - name: Deploy with Helmfile
        run: |
          cd helmfiles/app/stakefish
          helmfile apply --selector name=stakefish
        env:
          KUBECONFIG: ${{ steps.set-context.outputs.kubeconfig }}

      - name: Test application
        run: |
          set -e # Stop the workflow if any command fails
          echo "Testing root path..."
          curl http://172.171.140.70:3000/
          
          echo "Testing lookup endpoint..."
          curl "http://172.171.140.70:3000/v1/tools/lookup?domain=example.com"
          
          echo "Testing history endpoint..."
          curl http://172.171.140.70:3000/v1/history
          
          echo "Testing validate endpoint with POST request..."
          curl -X 'POST' \
            'http://172.171.140.70:3000/v1/tools/validate' \
            -H 'accept: application/json' \
            -H 'Content-Type: application/json' \
            -d '{
              "ip": "192.168.1.1"
            }'
