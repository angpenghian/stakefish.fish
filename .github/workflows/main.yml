name: build_deploy_aks
on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code 
        uses: actions/checkout@v4

      - name: Log in to Azure Container Registry
        run: echo ${{ secrets.ACR_PASSWORD }} | docker login penghian.azurecr.io --username ${{ secrets.ACR_USERNAME }} --password-stdin

      - name: Build and push Docker image to ACR
        run: |
          docker build -t fastapi-test:latest -f docker/Dockerfile ./docker
          docker tag fastapi-test:latest penghian.azurecr.io/fastapi-test:latest
          docker push penghian.azurecr.io/fastapi-test:latest

    # runs-on: ubuntu-latest
    # steps:
    #   - name: Checkout source code 
    #     uses: actions/checkout@v4

    #   - name: ACR build
    #     id: build-push-acr
    #     uses: azure/acr-build@v1
    #     with:
    #       service_principal: ${{ secrets.service_principal }}
    #       service_principal_password: ${{ secrets.service_principal_password }}
    #       tenant: ${{ secrets.tenant }}
    #       registry: ${{ secrets.registry }}
    #       repository: ${{ secrets.repository }}
    #       image:  fastapi-test
    #       dockerfile: docker/Dockerfile
    #       folder: docker
    #       branch: main
    #       tag: latest

    # runs-on: [self-hosted, linux]
    # steps:
    #   - name: Checkout source code 
    #     uses: actions/checkout@v4

    #   - name: Log in to Azure Container Registry
    #     uses: azure/docker-login@v1
    #     with:
    #       login-server: ${{ secrets.registry }}.azurecr.io
    #       username: ${{ secrets.service_principal }}
    #       password: ${{ secrets.service_principal_password }}

    #   - name: Build and push Docker image to ACR
    #     run: |
    #       sudo docker build -t ${{ secrets.registry }}.azurecr.io/${{ secrets.repository }}/fastapi-test:latest -f docker/Dockerfile docker
    #       sudo docker push ${{ secrets.registry }}.azurecr.io/${{ secrets.repository }}/fastapi-test:latest

      - name: Azure login
        id: login
        uses: azure/login@v1.4.3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        id: set-context
        uses: azure/aks-set-context@v3
        with:
          resource-group: '${{ secrets.resource_group }}' 
          cluster-name: '${{ secrets.cluster_name }}'

      - name: Setup kubectl
        id: install-kubectl
        uses: azure/setup-kubectl@v3

      - name: Install helmfile
        run: |
          curl -L --output helmfile https://github.com/roboll/helmfile/releases/download/v0.139.9/helmfile_linux_amd64
          chmod +x helmfile
          sudo mv helmfile /usr/local/bin

      - name: Deploy with Helmfile
        run: |
          helmfile -f ./helmfiles/app/stakefish apply --selector name=stakefish
        env:
          KUBECONFIG: ${{ steps.set-context.outputs.kubeconfig }}

      - name: Test application
        run: |
          set -e # Stop the workflow if any command fails
          echo "Testing root path..."
          curl http://172.171.140.70:3000/
          
          echo "Testing lookup endpoint..."
          curl "http://172.171.140.70:3000/v1/tools/lookup?domain=example.com"
          
          echo "Testing history endpoint..."
          curl http://172.171.140.70:3000/v1/history
          
          echo "Testing validate endpoint with POST request..."
          curl -X 'POST' \
            'http://172.171.140.70:3000/v1/tools/validate' \
            -H 'accept: application/json' \
            -H 'Content-Type: application/json' \
            -d '{
              "ip": "192.168.1.1"
            }'
